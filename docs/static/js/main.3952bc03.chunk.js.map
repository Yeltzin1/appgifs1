{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","console","log","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,uBAAMC,SAXS,SAACC,GAChBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IAEzBR,GAAc,SAAAS,GAAG,OAAGP,GAAH,mBAAiBO,OAClCN,EAAc,MAMlB,UACI,6CACA,uBACAO,KAAK,OACLC,MAAOT,EACPU,SArBiB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,OACvBG,QAAQC,IAAIV,EAAEQ,OAAOF,c,uBCThBK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAMD,EAAKE,KAAI,SAAAC,GACjB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAA0B,IAAD,IAAxBL,IAAQE,GAAgB,EAAnBD,GAAmB,EAAhBC,OAAMV,EAAU,EAAVA,IAEvC,OACI,sBAAKc,UAAU,OAAf,UAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEbhB,mBAAS,CAC9BuB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAEzBC,EAFyB,KAiBtC,OAVAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GAAI,OAAGH,EAAS,CAClBf,KAAMkB,EACNL,SAAQ,SAEd,CAACpB,IAIIqB,EDZgBK,CAAa1B,GAA7BO,EAJ4B,EAI5BA,KAAKa,EAJuB,EAIvBA,QAOZ,OACI,qCACA,6BAAKpB,IACL,6BAAKoB,GAAS,gBACd,qBAAKJ,UAAU,YAAf,SACI,6BAEIT,EAAKE,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,CAEAA,IAAKA,GADAA,EAAIC,eErBZgB,EAAe,WAAM,MAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAU9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACK6C,EAAWnB,KAAI,SAAAT,GAAQ,OAAE,cAAC,EAAD,CAE1BA,SAAUA,GADLA,Y,MChBrB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3952bc03.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {PropTypes} from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue]= useState('')\r\n\r\n    const handleInputChange =(e)=>{\r\n        setInputValue(e.target.value)\r\n        console.log(e.target.value)\r\n    }\r\n\r\n    const handleSend = (e)=>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length>2) {\r\n            \r\n            setCategories(cat=>[inputValue,...cat])\r\n            setInputValue('')\r\n            //console.log('ENVIADO!!!!!!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSend}>\r\n            <h2>AddCategory</h2>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=zym3R7gLxgMXi5n6wcSvgSCySNksrT8Y`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs =data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({img:{id,title,url}}) => {\r\n    //console.log(id,title,url)\r\n    return (\r\n        <div className=\"card\">\r\n            \r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from './hooks/useFetchGifs'\r\n//import { getGifs } from '../helpers/GetGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    //const [images, setImages] = useState([])\r\n    //console.log(useFetchGifs())\r\n    const {data,loading} = useFetchGifs(category)\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        <h2>{loading&&'Cargando...'}</h2>\r\n        <div className=\"card-grid\">\r\n            <ol>\r\n                {\r\n                data.map(img => (\r\n                <GifGridItem \r\n                key={img.id}\r\n                img={img}/>\r\n                ))\r\n                }\r\n            </ol>\r\n            </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../../helpers/GetGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state,setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n        .then(imgs=> setState({\r\n            data: imgs,\r\n            loading:false\r\n        }))\r\n    },[category])\r\n\r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories=['One punch','Inuyash','Goku']\r\n    const [categories, setCategories] = useState(['One punch'])\r\n\r\n    //const handleAdd = ()=>{\r\n    //    setCategories([...categories,'Vegeta'])\r\n    //}\r\n\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {categories.map(category=><GifGrid \r\n                key={category}\r\n                category={category}/>)}\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp /> ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}